// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
      And(a=true,b=load,out=k);
      DMux8Way(in=k,sel=address,a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
      Register(in=in,load=a,out=a0);
      Register(in=in,load=b,out=a1);
      Register(in=in,load=c,out=a2);
      Register(in=in,load=d,out=a3);
      Register(in=in,load=e,out=a4);
      Register(in=in,load=f,out=a5);
      Register(in=in,load=g,out=a6);
      Register(in=in,load=h,out=a7);
      Mux8Way16(a=a0,b=a1,c=a2,d=a3,e=a4,f=a5,g=a6,h=a7,sel=address,out=out);





}
